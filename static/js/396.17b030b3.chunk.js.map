{"version":3,"file":"static/js/396.17b030b3.chunk.js","mappings":"0OAAaA,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,WAAWF,aAArB,EACrBG,EAAiB,SAAAF,GAAK,OAAIA,EAAMC,WAAWC,cAArB,EACtBC,EAAoB,SAAAH,GAAK,OAAIA,EAAMC,WAAWE,iBAArB,E,SCWtCC,EAAAA,GAAAA,SAAiBC,EAAAA,GAAYC,EAAAA,EAASC,EAAAA,IAEtC,IAiFA,EAjFmB,WACjB,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYN,GAC9BO,GAAUD,EAAAA,EAAAA,IAAYP,GACtBS,GAASF,EAAAA,EAAAA,IAAYV,GAEvBa,EAAiB,GACfC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACV,GAAE,CAACH,IAEJ,IAAMI,EAAO,CACXC,OAAQ,GAWRC,SAAU,CACR,CAEEF,KAAML,EACNQ,gBAAiB,CACf,wBACA,yBACA,yBACA,yBACA,yBACA,uBACA,yBACA,wBACA,wBAEFC,YAAa,GACbC,YAAa,KAKnB,OACE,iCACE,wCACA,SAAC,KAAD,CAAUL,KAAMA,KAEhB,4BACE,8BACE,2BACE,sCACA,mCAEDT,EAAgBe,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAGlC,OAFAd,EAAee,KAAKD,GAEJ,WAATD,GACL,2BACE,wBAAKD,KACL,wBAAKE,MAFEF,GAIP,IACL,UAGL,2BACE,2BACE,yCACA,uBAAId,QAEN,2BACE,uCACA,uBAAIC,YAKb,C","sources":["redux/statistics/statisticsSelectors.js","components/Wallet/Statistics.jsx"],"sourcesContent":["export const incomeSummary = state => state.statistics.incomeSummary;\nexport const expenseSummary = state => state.statistics.expenseSummary;\nexport const categoriesSummary = state => state.statistics.categoriesSummary;\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTransactionsSummary } from 'redux/statistics/statisticsOperations';\nimport {\n  categoriesSummary,\n  expenseSummary,\n  incomeSummary,\n} from 'redux/statistics/statisticsSelectors';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Statistics = () => {\n  const stateStatistics = useSelector(categoriesSummary);\n  const expense = useSelector(expenseSummary);\n  const income = useSelector(incomeSummary);\n\n  let dataStatistics = [];\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTransactionsSummary());\n  }, [dispatch]);\n\n  const data = {\n    labels: [\n      // 'Basic expenses',\n      // 'Products',\n      // 'Car',\n      // 'Self care',\n      // 'Child care',\n      // 'Household products',\n      // 'Education',\n      // 'Leisure',\n      // 'Other expenses',\n    ],\n    datasets: [\n      {\n        // label: '# of Votes',\n        data: dataStatistics,\n        backgroundColor: [\n          'rgba(254, 208, 87, 1)',\n          'rgba(255, 216, 208, 1)',\n          'rgba(253, 148, 152, 1)',\n          'rgba(197, 186, 255, 1)',\n          'rgba(110, 120, 232, 1)',\n          'rgba(74, 86, 226, 1)',\n          'rgba(129, 225, 255, 1)',\n          'rgba(36, 204, 167, 1)',\n          'rgba(0, 173, 132, 1)',\n        ],\n        borderColor: [],\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  return (\n    <>\n      <h1>Statistics</h1>\n      <Doughnut data={data} />\n\n      <table>\n        <tbody>\n          <tr>\n            <th>Category</th>\n            <th>Sum</th>\n          </tr>\n          {stateStatistics.map(({ name, type, total }) => {\n            dataStatistics.push(total);\n\n            return type !== 'INCOME' ? (\n              <tr key={name}>\n                <td>{name}</td>\n                <td>{total}</td>\n              </tr>\n            ) : null;\n          })}\n        </tbody>\n      </table>\n      <ul>\n        <li>\n          <span>Expenses:</span>\n          <p>{expense}</p>\n        </li>\n        <li>\n          <span>Income:</span>\n          <p>{income}</p>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default Statistics;\n"],"names":["incomeSummary","state","statistics","expenseSummary","categoriesSummary","ChartJS","ArcElement","Tooltip","Legend","stateStatistics","useSelector","expense","income","dataStatistics","dispatch","useDispatch","useEffect","getTransactionsSummary","data","labels","datasets","backgroundColor","borderColor","borderWidth","map","name","type","total","push"],"sourceRoot":""}