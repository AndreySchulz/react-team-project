{"version":3,"file":"static/js/493.79ca4883.chunk.js","mappings":"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","sources":["redux/statistics/statisticsSelectors.js","webpack://react-homework-template/./src/components/Wallet/Statistics.module.css?2da8","components/Wallet/Statistics.jsx"],"sourcesContent":["export const incomeSummary = state => state.statistics.incomeSummary;\nexport const expenseSummary = state => state.statistics.expenseSummary;\nexport const categoriesSummary = state => state.statistics.categoriesSummary;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Statistics_container__33rwm\",\"statisticsBox\":\"Statistics_statisticsBox__FXF-E\",\"statisticsHeading\":\"Statistics_statisticsHeading__KmZlg\",\"canvasBox\":\"Statistics_canvasBox__BcWSd\",\"canvasSumm\":\"Statistics_canvasSumm__ScsBz\",\"selectBox\":\"Statistics_selectBox__6hGtT\",\"select\":\"Statistics_select__l7HXT\",\"table\":\"Statistics_table__HfmDA\",\"tableHead\":\"Statistics_tableHead__cpt8n\",\"tableTr\":\"Statistics_tableTr__NKK7r\",\"tableCategory\":\"Statistics_tableCategory__GQB+I\",\"tableSumm\":\"Statistics_tableSumm__d1yQz\",\"tableSummIncome\":\"Statistics_tableSummIncome__bsWnk\",\"tableSummExpence\":\"Statistics_tableSummExpence__L0S4E\",\"tableHeaderData\":\"Statistics_tableHeaderData__1sy5s\",\"tableData\":\"Statistics_tableData__0ugyX\",\"tableHeader\":\"Statistics_tableHeader__COv4P\",\"firstTableData\":\"Statistics_firstTableData__icmYJ\",\"lastTableData\":\"Statistics_lastTableData__97i6e\"};","import React, { useState } from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport Select from 'react-select';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTransactionsSummary } from 'redux/statistics/statisticsOperations';\nimport {\n  categoriesSummary,\n  expenseSummary,\n  incomeSummary,\n} from 'redux/statistics/statisticsSelectors';\nimport s from '../Wallet/Statistics.module.css';\nimport { getAuthBalance } from 'redux/AuthRedux/selectors';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Statistics = () => {\n  const stateStatistics = useSelector(categoriesSummary);\n  const expense = useSelector(expenseSummary);\n  const income = useSelector(incomeSummary);\n  const balance = useSelector(getAuthBalance);\n\n  const [selectedMounth, setSelectedMounth] = useState(null);\n  const [selectedYear, setSelectedYear] = useState({\n    value: '2022',\n    label: '2022',\n  });\n\n  const dispatch = useDispatch();\n  let dataStatistics = [];\n\n  useEffect(() => {\n    const timeSelected = {\n      month: selectedMounth ? selectedMounth.value : 0,\n      year: selectedYear.value,\n    };\n\n    dispatch(getTransactionsSummary(timeSelected));\n  }, [selectedMounth, selectedYear, dispatch]);\n\n  const optionsMounth = [\n    { value: '1', label: 'January' },\n    { value: '2', label: 'February' },\n    { value: '3', label: 'March' },\n    { value: '4', label: 'April' },\n    { value: '5', label: 'May' },\n    { value: '6', label: 'June' },\n    { value: '7', label: 'July' },\n    { value: '8', label: 'August' },\n    { value: '9', label: 'September' },\n    { value: '10', label: 'October' },\n    { value: '11', label: 'November' },\n    { value: '12', label: 'December' },\n    { value: '', label: 'All' },\n  ];\n  const optionsYear = [\n    { value: '2022', label: '2022' },\n    { value: '2021', label: '2021' },\n    { value: '2020', label: '2020' },\n    { value: '2019', label: '2019' },\n    { value: '2018', label: '2018' },\n  ];\n\n  const data = {\n    labels: [],\n    datasets: [\n      {\n        // label: '# of Votes',\n        data: dataStatistics,\n        backgroundColor: [\n          'rgba(254, 208, 87, 1)',\n          'rgba(255, 216, 208, 1)',\n          'rgba(253, 148, 152, 1)',\n          'rgba(197, 186, 255, 1)',\n          'rgba(110, 120, 232, 1)',\n          'rgba(74, 86, 226, 1)',\n          'rgba(129, 225, 255, 1)',\n          'rgba(36, 204, 167, 1)',\n          'rgba(0, 173, 132, 1)',\n        ],\n        borderColor: [],\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  const TableData = () => {\n    const isData = stateStatistics.length;\n    return isData ? (\n      <table className={s.table}>\n        <thead className={s.tableHeader}>\n          <tr>\n            <th className={s.tableHeaderData}>Category</th>\n            <th className={s.tableHeaderData}>Sum</th>\n          </tr>\n        </thead>\n        <tbody>\n          {stateStatistics.map(({ name, type, total }, idx) => {\n            dataStatistics.push(total);\n\n            // data.labels.push(name);\n            return type !== 'INCOME' ? (\n              <tr key={name}>\n                <td\n                  className={`${s.tableData} ${idx === 0 && s.firstTableData}`}\n                >\n                  {name}\n                </td>\n                <td\n                  className={`${s.tableData} ${idx === 0 && s.firstTableData}`}\n                >\n                  {total}\n                </td>\n              </tr>\n            ) : null;\n          })}\n        </tbody>\n        <tfoot>\n          <tr className={s.tableTr}>\n            <td className={s.tableCategory}>Expenses:</td>\n            <td className={s.tableSummExpence}>{expense}</td>\n          </tr>\n          <tr className={s.tableTr}>\n            <td className={s.tableCategory}>Income:</td>\n            <td className={s.tableSummIncome}>{income}</td>\n          </tr>\n        </tfoot>\n      </table>\n    ) : (\n      <h2>Sorry</h2>\n    );\n  };\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.statisticsHeading}>Statistics</h1>\n      <div className={s.statisticsBox}>\n        <div className={s.canvasBox}>\n          <h2 className={s.canvasSumm}>â‚´ {balance}</h2>\n          <Doughnut data={data} />\n        </div>\n        <div>\n          <div className={s.selectBox}>\n            <Select\n              styles={{\n                control: (baseStyles, state) => ({\n                  ...baseStyles,\n                  borderColor: 'transparent',\n                  border: '1px solid #000000',\n                  borderRadius: '30px',\n                  height: '50px',\n                  outline: 'none !important',\n                }),\n              }}\n              className={s.select}\n              onChange={setSelectedMounth}\n              options={optionsMounth}\n              placeholder=\"Mounth\"\n            />\n            <Select\n              styles={{\n                control: (baseStyles, state) => ({\n                  ...baseStyles,\n                  borderColor: 'transparent',\n                  border: '1px solid #000000',\n                  borderRadius: '30px',\n                  height: '50px',\n                  outline: 'none !important',\n                }),\n              }}\n              className={s.select}\n              onChange={setSelectedYear}\n              options={optionsYear}\n              placeholder=\"Year\"\n            />\n          </div>\n          <TableData />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Statistics;\n"],"names":["incomeSummary","state","statistics","expenseSummary","categoriesSummary","ChartJS","ArcElement","Tooltip","Legend","stateStatistics","useSelector","expense","income","balance","getAuthBalance","useState","selectedMounth","setSelectedMounth","value","label","selectedYear","setSelectedYear","dispatch","useDispatch","dataStatistics","useEffect","timeSelected","month","year","getTransactionsSummary","data","labels","datasets","backgroundColor","borderColor","borderWidth","TableData","length","className","s","map","idx","name","type","total","push","styles","control","baseStyles","border","borderRadius","height","outline","onChange","options","placeholder"],"sourceRoot":""}