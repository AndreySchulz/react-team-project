{"version":3,"file":"static/js/964.b863887a.chunk.js","mappings":"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","sources":["components/Auth/Register.jsx","webpack://react-homework-template/./src/components/Auth/Login.module.css?c871"],"sourcesContent":["import { Formik, Field, Form } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport register from '../../images/currency/register.png';\nimport { useDispatch } from 'react-redux';\nimport { RegisterApi } from 'redux/AuthRedux/operations';\nimport sprite from '../../images/sprite.svg';\nimport s from './Login.module.css';\n// import Media from 'react-media';\n\n// import { getAuthError } from 'redux/AuthRedux/selectors';\nimport { useState } from 'react';\nconst Register = () => {\n  const [chek, setChek] = useState();\n  // eslint-disable-next-line\n  // const error = useSelector(getAuthError);\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    const { email, username, password, userpassword } = e;\n    if (\n      password.length >= 6 &&\n      password.length <= 12 &&\n      username.length > 1 &&\n      username.length <= 12\n    ) {\n      password === userpassword\n        ? dispatch(RegisterApi({ email, username, password }))\n        : console.log('The password does not match');\n    } else {\n      console.log('error');\n    }\n  };\n  const handlePassword = e => {\n    const good = { width: '100%', backgroundColor: '#24cca7' };\n    const normally = { width: '45%', backgroundColor: 'orange' };\n    const badly = { width: '25%', backgroundColor: 'red' };\n    const refresh = { width: '0%', backgroundColor: '#E5F1EF' };\n    if (e.length > 0 && e.length < 2) {\n      setChek(refresh);\n    }\n    if (e.length > 3 && e.length < 5) {\n      setChek(badly);\n    }\n    if (e.length >= 6 && e.length <= 8) {\n      setChek(normally);\n    }\n    if (e.length >= 8 && e.length <= 12) {\n      setChek(good);\n    }\n  };\n  return (\n    <div className={s.section}>\n      <div className={s.aside}>\n        <img src={register} alt=\"register\" className={s.image} />\n        <h2 className={s.title}>Finance App</h2>\n      </div>\n      <div className={s.body}>\n        <div className={s.box}>\n          <div className={s.logo}>\n            <svg className={s.logoSvg}>\n              <use href={`${sprite}#icon-logo-full`}></use>\n            </svg>\n          </div>\n          <Formik\n            initialValues={{\n              password: '',\n              email: '',\n              username: '',\n              userpassword: '',\n            }}\n            validate={({ password, userpassword, email }) => {\n              if (userpassword.length === password.length) {\n                handlePassword(userpassword);\n              }\n              const errors = {};\n              if (!email) {\n                errors.email = 'Required';\n              } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)\n              ) {\n                errors.email = 'Invalid email address';\n              }\n              return errors;\n            }}\n            onSubmit={handleSubmit}\n          >\n            <Form className={s.form}>\n              <div className={s.inner}>\n                <label form=\"email\">\n                  <svg className={s.svg}>\n                    <use href={`${sprite}#email`}></use>\n                  </svg>\n                  <Field\n                    name=\"email\"\n                    type=\"email\"\n                    required\n                    className={s.field}\n                    placeholder=\"E-mail\"\n                  />\n                </label>\n              </div>\n              <div className={s.inner}>\n                <label form=\"password\">\n                  <svg className={s.svg}>\n                    <use href={`${sprite}#password`}></use>\n                  </svg>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    required\n                    className={s.field}\n                    placeholder=\"Password\"\n                  />\n                </label>\n              </div>\n              <div className={s.inner}>\n                <label form=\"password\">\n                  <svg className={s.svg}>\n                    <use href={`${sprite}#password`}></use>\n                  </svg>\n                  <Field\n                    name=\"userpassword\"\n                    type=\"password\"\n                    required\n                    className={s.field}\n                    placeholder=\"Confirm password\"\n                  />\n                  <div className={s.block_check}>\n                    <div style={chek} className={s.check}></div>\n                  </div>\n                </label>\n              </div>\n              <div className={s.inner}>\n                <svg className={s.svg}>\n                  <use href={`${sprite}#user`}></use>\n                </svg>\n                <label form=\"username\">\n                  <Field\n                    name=\"username\"\n                    type=\"username\"\n                    required\n                    className={s.field}\n                    placeholder=\"First name\"\n                  />\n                </label>\n              </div>\n              <button type=\"submit\" className={s.button}>\n                Register\n              </button>\n              <NavLink to=\"/login\" className={s.link}>\n                Log in\n              </NavLink>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Register;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Login_section__3XiNw\",\"aside\":\"Login_aside__4V+ez\",\"image\":\"Login_image__MOfqt\",\"body\":\"Login_body__huhm3\",\"box\":\"Login_box__BrcB-\",\"field\":\"Login_field__yL3Ry\",\"title\":\"Login_title__EmUXd\",\"form\":\"Login_form__vT2Da\",\"inner\":\"Login_inner__lU2VF\",\"button\":\"Login_button__WVAT9\",\"link\":\"Login_link__gJlUr\",\"logoSvg\":\"Login_logoSvg__O+ofq\",\"logo\":\"Login_logo__uN7j9\",\"svg\":\"Login_svg__K-9y8\",\"block_check\":\"Login_block_check__Y5BBO\",\"check\":\"Login_check__XRY8i\"};"],"names":["useState","chek","setChek","dispatch","useDispatch","className","s","src","register","alt","href","sprite","initialValues","password","email","username","userpassword","validate","e","length","width","backgroundColor","errors","test","onSubmit","RegisterApi","console","log","form","name","type","required","placeholder","style","to"],"sourceRoot":""}