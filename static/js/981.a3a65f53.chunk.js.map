{"version":3,"file":"static/js/981.a3a65f53.chunk.js","mappings":"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","sources":["redux/transactions/transactions-selectors.js","webpack://react-homework-template/./src/components/Wallet/ModalAddTransaction.module.css?050b","images/transactions/transactionSprite.svg","components/Wallet/CustomDatePicker.jsx","components/Wallet/ModalAddTransaction.jsx","webpack://react-homework-template/./src/components/Wallet/Transactions.module.css?ecce","components/Wallet/Transactions.jsx"],"sourcesContent":["export const selectTransactions = state => state.transactions.transactions;\nexport const selectCategories = state => state.transactions.categories;\nexport const selectError = state => state.transactions.error;\nexport const selectModalStatus = state =>\n  state.transactions.isTransactionModalOpen;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"ModalAddTransaction_backdrop__9YaTy\",\"modal\":\"ModalAddTransaction_modal__Ds58Q\",\"modalForm\":\"ModalAddTransaction_modalForm__+xHlN\",\"closeBtn\":\"ModalAddTransaction_closeBtn__PD4qb\",\"modalTitle\":\"ModalAddTransaction_modalTitle__5uy28\",\"typeWrapper\":\"ModalAddTransaction_typeWrapper__zr9tr\",\"typeCheckbox\":\"ModalAddTransaction_typeCheckbox__5CM5W\",\"customCheckbox\":\"ModalAddTransaction_customCheckbox__Lusq4\",\"inactive\":\"ModalAddTransaction_inactive__XoOqJ\",\"income\":\"ModalAddTransaction_income__9Qunp ModalAddTransaction_inactive__XoOqJ\",\"expense\":\"ModalAddTransaction_expense__FAXIm ModalAddTransaction_inactive__XoOqJ\",\"typeLabel\":\"ModalAddTransaction_typeLabel__xzRI4\",\"select\":\"ModalAddTransaction_select__WguZ7\",\"selectPlaceholder\":\"ModalAddTransaction_selectPlaceholder__-fYb-\",\"amountAndDate\":\"ModalAddTransaction_amountAndDate__k5cLR\",\"amountAndDateInputs\":\"ModalAddTransaction_amountAndDateInputs__8QD0+\",\"amountInput\":\"ModalAddTransaction_amountInput__qwGJd ModalAddTransaction_amountAndDateInputs__8QD0+\",\"customDateInput\":\"ModalAddTransaction_customDateInput__9YfM0 ModalAddTransaction_amountAndDateInputs__8QD0+\",\"calendarIcon\":\"ModalAddTransaction_calendarIcon__L3BwY\",\"commentInput\":\"ModalAddTransaction_commentInput__h66RA\",\"btnWrapper\":\"ModalAddTransaction_btnWrapper__FnKSr\",\"addBtn\":\"ModalAddTransaction_addBtn__73b0r\",\"cancelBtn\":\"ModalAddTransaction_cancelBtn__Cun97 ModalAddTransaction_addBtn__73b0r\"};","var _symbol, _symbol2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTransactionSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-calendar\",\n    viewBox: \"0 0 29 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4a56e2\",\n    style: {\n      fill: \"var(--color1, #4a56e2)\"\n    },\n    d: \"M9.6 14.4h-3.2v3.2h3.2v-3.2zM16 14.4h-3.2v3.2h3.2v-3.2zM22.4 14.4h-3.2v3.2h3.2v-3.2zM25.6 3.2h-1.6v-3.2h-3.2v3.2h-12.8v-3.2h-3.2v3.2h-1.6c-1.776 0-3.184 1.44-3.184 3.2l-0.016 22.4c0 1.76 1.424 3.2 3.2 3.2h22.4c1.76 0 3.2-1.44 3.2-3.2v-22.4c0-1.76-1.44-3.2-3.2-3.2zM25.6 28.8h-22.4v-17.6h22.4v17.6z\"\n  })), _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.7778,\n    d: \"M1.778 1.778l28.444 28.444\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.7778,\n    d: \"M1.778 30.222l28.444-28.444\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-minus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"var(--color2, #fff)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.2,\n    d: \"M0 16h32\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"var(--color2, #fff)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.2,\n    d: \"M16 0v32\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"var(--color2, #fff)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.2,\n    d: \"M0 16h32\"\n  })), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-selectArrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.6,\n    d: \"M1.6 8.8l14.4 14.4 14.4-14.4\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTransactionSprite);\nexport default __webpack_public_path__ + \"static/media/transactionSprite.f81084fa89e2f71405e24f42db60dd15.svg\";\nexport { ForwardRef as ReactComponent };","import { forwardRef } from 'react';\nimport s from './ModalAddTransaction.module.css';\nimport sprite from '../../images/transactions/transactionSprite.svg';\n\nexport const CustomDatePicker = forwardRef(({ value, onClick }, ref) => {\n  return (\n    <>\n      <input\n        value={value}\n        className={s.customDateInput}\n        onClick={onClick}\n        onChange={onClick}\n        ref={ref}\n        required\n      />\n      <svg className={s.calendarIcon} width={18} height={20} onClick={onClick}>\n        <use href={sprite + '#icon-calendar'}></use>\n      </svg>\n    </>\n  );\n});\n","import { useFormik } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleModal } from 'redux/transactions/transactions-slice';\nimport { useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport s from './ModalAddTransaction.module.css';\nimport {\n  addTransaction,\n  getCategories,\n} from 'redux/transactions/transactions-operations';\nimport { selectCategories } from 'redux/transactions/transactions-selectors';\nimport { CustomDatePicker } from './CustomDatePicker';\n\nexport function ModalAddTransaction() {\n  const [startDate, setStartDate] = useState(new Date());\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCategories());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const closeOnEsc = e => {\n      if (e.code === 'Escape') {\n        dispatch(toggleModal());\n      }\n    };\n\n    document.addEventListener('keydown', closeOnEsc);\n    return () => document.removeEventListener('keydown', closeOnEsc);\n  }, [dispatch]);\n\n  function closeOnOverlay(e) {\n    if (e.target === e.currentTarget) {\n      dispatch(toggleModal());\n    }\n  }\n\n  const categories = useSelector(selectCategories);\n\n  const formik = useFormik({\n    initialValues: {\n      type: true,\n      amount: '',\n      comment: '',\n      categoryId: '',\n    },\n    validationSchema: yup.object({\n      type: yup.bool(),\n      amount: yup.number().required('Required'),\n      comment: yup.string().max(40, '40 characters max'),\n      categoryId: yup.string().required('Required'),\n    }),\n\n    onSubmit: ({ categoryId, type, amount, comment }) => {\n      const newTransaction = {\n        transactionDate: startDate,\n        comment,\n        categoryId: type ? categoryId : '063f1132-ba5d-42b4-951d-44011ca46262',\n        amount: type ? Number(amount) * -1 : Number(amount),\n        type: type ? 'EXPENSE' : 'INCOME',\n      };\n      dispatch(addTransaction(newTransaction));\n      dispatch(toggleModal());\n    },\n  });\n\n  const { handleChange, handleSubmit, values, errors, touched } = formik;\n\n  return (\n    <div className={s.backdrop} onClick={closeOnOverlay}>\n      <div className={s.modal}>\n        <button\n          className={s.closeBtn}\n          onClick={() => dispatch(toggleModal())}\n          type=\"button\"\n          aria-label=\"close button\"\n        ></button>\n\n        <form className={s.modalForm} onSubmit={handleSubmit}>\n          <h2 className={s.modalTitle}>Add transaction</h2>\n\n          <div className={s.typeWrapper}>\n            <div className={values.type ? s.inactive : s.income}>Income</div>\n            <label className={s.typeLabel}>\n              <input\n                className={s.typeCheckbox}\n                name=\"type\"\n                type=\"checkbox\"\n                checked={values.type}\n                onChange={handleChange}\n              />\n              <div className={s.customCheckbox}></div>\n            </label>\n            <div className={values.type ? s.expense : s.inactive}>Expense</div>\n          </div>\n\n          {values.type && (\n            <select\n              className={s.select}\n              name=\"categoryId\"\n              value={values.categoryId}\n              onChange={handleChange}\n              required\n            >\n              <option className={s.selectPlaceholder} value=\"\" disabled hidden>\n                Select your option\n              </option>\n              {categories.map(category =>\n                category.type === 'EXPENSE' ? (\n                  <option key={category.id} value={category.id}>\n                    {category.name}\n                  </option>\n                ) : null\n              )}\n            </select>\n          )}\n          {touched.categoryId && errors.categoryId ? (\n            <div>{errors.categoryId}</div>\n          ) : null}\n\n          <div className={s.amountAndDate}>\n            <input\n              className={s.amountInput}\n              name=\"amount\"\n              type=\"text\"\n              placeholder=\"0.00\"\n              value={values.amount}\n              onChange={handleChange}\n              required\n            />\n            {touched.amount && errors.amount ? (\n              <div>{errors.amount}</div>\n            ) : null}\n\n            <DatePicker\n              selected={startDate}\n              dateFormat=\"dd.MM.yyyy\"\n              calendarStartDay={1}\n              onChange={setStartDate}\n              customInput={<CustomDatePicker />}\n            />\n          </div>\n\n          <input\n            className={s.commentInput}\n            name=\"comment\"\n            type=\"text\"\n            placeholder=\"Comment\"\n            value={values.comment}\n            onChange={handleChange}\n          />\n          {touched.comment && errors.comment ? (\n            <div>{errors.comment}</div>\n          ) : null}\n\n          <div className={s.btnWrapper}>\n            <button className={s.addBtn} type=\"submit\">\n              Add\n            </button>\n            <button\n              className={s.cancelBtn}\n              type=\"button\"\n              onClick={() => dispatch(toggleModal())}\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"transactions\":\"Transactions_transactions__71ga-\",\"transactionsTable\":\"Transactions_transactionsTable__dtPaD\",\"tableHeader\":\"Transactions_tableHeader__Cpqjv\",\"tableHeaderData\":\"Transactions_tableHeaderData__mZexS\",\"tableHeaderDataRight\":\"Transactions_tableHeaderDataRight__gujHp Transactions_tableHeaderData__mZexS\",\"tableBody\":\"Transactions_tableBody__mnCJO\",\"tableData\":\"Transactions_tableData__i3g3I\",\"firstTableData\":\"Transactions_firstTableData__hSLhT\",\"lastTableData\":\"Transactions_lastTableData__YuN01\",\"tableDataRight\":\"Transactions_tableDataRight__k5pQt Transactions_tableData__i3g3I\",\"tableDataIncome\":\"Transactions_tableDataIncome__YKGXQ Transactions_tableDataRight__k5pQt Transactions_tableData__i3g3I\",\"tableDataExpense\":\"Transactions_tableDataExpense__X6kvt Transactions_tableDataRight__k5pQt Transactions_tableData__i3g3I\",\"addButton\":\"Transactions_addButton__cRmgL\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { compareDesc, format, parseISO } from 'date-fns';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getCategories } from 'redux/transactions/transactions-operations';\nimport {\n  selectCategories,\n  selectTransactions,\n  selectModalStatus,\n  selectError,\n} from 'redux/transactions/transactions-selectors';\nimport { toggleModal } from 'redux/transactions/transactions-slice';\nimport { ModalAddTransaction } from './ModalAddTransaction';\nimport s from './Transactions.module.css';\nimport sprite from '../../images/transactions/transactionSprite.svg';\n\n// Продумана max-height: 60vh; (наприклад, а далі включається скролл всередині компонента, скільки vh проговорити це з автором DashboardPage)\n\nconst Transactions = () => {\n  const isModalOpen = useSelector(selectModalStatus);\n  const categories = useSelector(selectCategories);\n  const transactionsData = useSelector(selectTransactions);\n  const isError = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCategories());\n  }, [dispatch]);\n\n  const sortedTransactions = [...transactionsData].sort((a, b) =>\n    compareDesc(parseISO(a.transactionDate), parseISO(b.transactionDate))\n  );\n\n  !!isError && toast.error(isError);\n\n  return (\n    <section className={s.transactions}>\n      <table className={s.transactionsTable}>\n        <thead className={s.tableHeader}>\n          <tr className={s.tableHeaderRow}>\n            <th className={s.tableHeaderData}>Date</th>\n            <th className={s.tableHeaderData}>Type</th>\n            <th className={s.tableHeaderData}>Category</th>\n            <th className={s.tableHeaderData}>Comment</th>\n            <th className={s.tableHeaderDataRight}>Sum</th>\n            <th className={s.tableHeaderDataRight}>Balance</th>\n          </tr>\n        </thead>\n        <tbody className={s.tableBody}>\n          {sortedTransactions.map(\n            (\n              {\n                id,\n                transactionDate,\n                type,\n                categoryId,\n                comment,\n                amount,\n                balanceAfter,\n              },\n              idx,\n              arr\n            ) => (\n              <tr key={id}>\n                <td\n                  className={`${s.tableData} ${idx === 0 && s.firstTableData} ${\n                    idx === arr.length - 1 && s.lastTableData\n                  }`}\n                >\n                  {format(parseISO(transactionDate), 'dd.MM.yyyy')}\n                </td>\n                <td\n                  className={`${s.tableData} ${idx === 0 && s.firstTableData} ${\n                    idx === arr.length - 1 && s.lastTableData\n                  }`}\n                >\n                  {type === 'INCOME' ? '+' : '-'}\n                </td>\n                <td\n                  className={`${s.tableData} ${idx === 0 && s.firstTableData} ${\n                    idx === arr.length - 1 && s.lastTableData\n                  }`}\n                >\n                  {\n                    categories.find(category => category.id === categoryId)\n                      ?.name\n                  }\n                </td>\n                <td\n                  className={`${s.tableData} ${idx === 0 && s.firstTableData} ${\n                    idx === arr.length - 1 && s.lastTableData\n                  }`}\n                >\n                  {comment}\n                </td>\n                <td\n                  className={`${\n                    type === 'INCOME' ? s.tableDataIncome : s.tableDataExpense\n                  } ${idx === 0 && s.firstTableData} ${\n                    idx === arr.length - 1 && s.lastTableData\n                  }`}\n                >\n                  {Math.abs(amount)}\n                </td>\n                <td\n                  className={`${s.tableDataRight} ${\n                    idx === 0 && s.firstTableData\n                  } ${idx === arr.length - 1 && s.lastTableData}`}\n                >\n                  {balanceAfter}\n                </td>\n              </tr>\n            )\n          )}\n        </tbody>\n      </table>\n\n      <button\n        type=\"button\"\n        className={s.addButton}\n        aria-label=\"add transaction button\"\n        onClick={() => dispatch(toggleModal())}\n      >\n        <svg width={20} height={20}>\n          <use href={sprite + '#icon-plus'}></use>\n        </svg>\n      </button>\n\n      {isModalOpen && <ModalAddTransaction />}\n\n      <ToastContainer />\n    </section>\n  );\n};\n\nexport default Transactions;\n"],"names":["selectTransactions","state","transactions","selectCategories","categories","selectError","error","selectModalStatus","isTransactionModalOpen","CustomDatePicker","forwardRef","ref","value","onClick","className","s","onChange","required","width","height","href","sprite","ModalAddTransaction","useState","Date","startDate","setStartDate","dispatch","useDispatch","useEffect","getCategories","closeOnEsc","e","code","toggleModal","document","addEventListener","removeEventListener","useSelector","formik","useFormik","initialValues","type","amount","comment","categoryId","validationSchema","yup","max","onSubmit","newTransaction","transactionDate","Number","addTransaction","handleChange","handleSubmit","values","errors","touched","target","currentTarget","name","checked","disabled","hidden","map","category","id","placeholder","selected","dateFormat","calendarStartDay","customInput","isModalOpen","transactionsData","isError","sortedTransactions","sort","a","b","compareDesc","parseISO","toast","idx","arr","balanceAfter","length","format","find","Math","abs"],"sourceRoot":""}