{"version":3,"file":"static/js/396.b48a9963.chunk.js","mappings":"mPAEaA,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,WAAWF,iBAArB,E,SCOtCG,EAAAA,GAAAA,SAAiBC,EAAAA,GAAYC,EAAAA,EAASC,EAAAA,IAEtC,IAuHA,EAvHmB,WACjB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,MAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAsBJ,EAAAA,EAAAA,UAAS,MAA/B,eAAOK,EAAP,KAAYC,EAAZ,KACA,GAAwBN,EAAAA,EAAAA,UAAS,MAAjC,eAAOO,EAAP,KAAaC,EAAb,KACA,GAA0BR,EAAAA,EAAAA,UAAS,MAAnC,eAAOS,EAAP,KAAcC,EAAd,KACA,GAA0BV,EAAAA,EAAAA,UAAS,MAAnC,eAAOW,EAAP,KAAcC,EAAd,KACA,GAAkCZ,EAAAA,EAAAA,UAAS,MAA3C,eAAOa,EAAP,KAAkBC,EAAlB,KACA,GAA8Bd,EAAAA,EAAAA,UAAS,MAAvC,eAAOe,EAAP,KAAgBC,EAAhB,KACA,GAA0BhB,EAAAA,EAAAA,UAAS,MAAnC,eAAOiB,EAAP,KAAcC,EAAd,KACMC,GAAcC,EAAAA,EAAAA,IAAY3B,GAiD1B4B,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACTL,EAAYM,KAAI,SAAAC,GACd,OAnDgB,SAAAA,GAClB,IAAQC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,OAAQD,GACN,IAAK,iBACHzB,GAAS,SAAA2B,GAAI,OAAIA,EAAOD,CAAX,IACbE,QAAQC,IAAI9B,GACZ,MACF,IAAK,WACHG,GAAW,SAAAyB,GAAI,OAAIA,EAAOD,CAAX,IACf,MACF,IAAK,MACHtB,GAAO,SAAAuB,GAAI,OAAIA,EAAOD,CAAX,IACX,MACF,IAAK,YACHpB,GAAQ,SAAAqB,GAAI,OAAIA,EAAOD,CAAX,IACZ,MACF,IAAK,aACHlB,GAAS,SAAAmB,GAAI,OAAIA,EAAOD,CAAX,IACb,MACF,IAAK,qBACHhB,GAAS,SAAAiB,GAAI,OAAIA,EAAOD,CAAX,IACb,MACF,IAAK,YACHd,GAAa,SAAAe,GAAI,OAAIA,EAAOD,CAAX,IACjB,MACF,IAAK,UACHZ,GAAW,SAAAa,GAAI,OAAIA,EAAOD,CAAX,IACf,MACF,IAAK,iBACHV,GAAS,SAAAW,GAAI,OAAIA,EAAOD,CAAX,IACb,MACF,QACE,OAEL,CAiBUI,CAAYN,EACpB,GAEF,GAAE,CAACL,IAEJ,IAAMK,EAAO,CACXO,OAAQ,CACN,iBACA,WACA,MACA,YACA,aACA,qBACA,YACA,UACA,kBAEFC,SAAU,CACR,CAEER,KAAM,CACJzB,EACAE,EACAE,EACAE,EACAE,EACAE,EACAE,EACAE,EACAE,GAEFkB,gBAAiB,CACf,wBACA,yBACA,yBACA,yBACA,yBACA,uBACA,yBACA,wBACA,wBAEFC,YAAa,GACbC,YAAa,KAKnB,OACE,iCACE,wCACA,SAAC,KAAD,CAAUX,KAAMA,IAFlB,MAKH,C","sources":["redux/statistics/statisticsSelectors.js","components/Wallet/Statistics.jsx"],"sourcesContent":["export const incomeSummary = state => state.statistics.incomeSummary;\nexport const expenseSummary = state => state.statistics.expenseSummary;\nexport const categoriesSummary = state => state.statistics.categoriesSummary;\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTransactionsSummary } from 'redux/statistics/statisticsOperations';\nimport { categoriesSummary } from 'redux/statistics/statisticsSelectors';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Statistics = () => {\n  const [basic, setBasic] = useState(null);\n  const [product, setProduct] = useState(null);\n  const [car, setCar] = useState(null);\n  const [self, setSelf] = useState(null);\n  const [child, setChild] = useState(null);\n  const [house, setHouse] = useState(null);\n  const [education, setEducation] = useState(null);\n  const [leisure, setLeisure] = useState(null);\n  const [other, setOther] = useState(null);\n  const summaryStat = useSelector(categoriesSummary);\n\n  const SwitchValue = data => {\n    const { name, total } = data;\n    switch (name) {\n      case 'Basic expenses':\n        setBasic(prev => prev + total);\n        console.log(basic);\n        break;\n      case 'Products':\n        setProduct(prev => prev + total);\n        break;\n      case 'Car':\n        setCar(prev => prev + total);\n        break;\n      case 'Self care':\n        setSelf(prev => prev + total);\n        break;\n      case 'Child care':\n        setChild(prev => prev + total);\n        break;\n      case 'Household products':\n        setHouse(prev => prev + total);\n        break;\n      case 'Education':\n        setEducation(prev => prev + total);\n        break;\n      case 'Leisure':\n        setLeisure(prev => prev + total);\n        break;\n      case 'Other expenses':\n        setOther(prev => prev + total);\n        break;\n      default:\n        return;\n    }\n  };\n  //   const resetValue = () => {\n  //     setBasic(null);\n  //     setProduct(null);\n  //     setCar(null);\n  //     setSelf(null);\n  //     setChild(null);\n  //     setHouse(null);\n  //     setEducation(null);\n  //     setLeisure(null);\n  //     setOther(null);\n  //   };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTransactionsSummary());\n    summaryStat.map(data => {\n      return SwitchValue(data);\n    });\n    // eslint-disable-next-line\n  }, [dispatch]);\n\n  const data = {\n    labels: [\n      'Basic expenses',\n      'Products',\n      'Car',\n      'Self care',\n      'Child care',\n      'Household products',\n      'Education',\n      'Leisure',\n      'Other expenses',\n    ],\n    datasets: [\n      {\n        // label: '# of Votes',\n        data: [\n          basic,\n          product,\n          car,\n          self,\n          child,\n          house,\n          education,\n          leisure,\n          other,\n        ],\n        backgroundColor: [\n          'rgba(254, 208, 87, 1)',\n          'rgba(255, 216, 208, 1)',\n          'rgba(253, 148, 152, 1)',\n          'rgba(197, 186, 255, 1)',\n          'rgba(110, 120, 232, 1)',\n          'rgba(74, 86, 226, 1)',\n          'rgba(129, 225, 255, 1)',\n          'rgba(36, 204, 167, 1)',\n          'rgba(0, 173, 132, 1)',\n        ],\n        borderColor: [],\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  return (\n    <>\n      <h1>Statistics</h1>\n      <Doughnut data={data} />;\n    </>\n  );\n};\n\nexport default Statistics;\n"],"names":["categoriesSummary","state","statistics","ChartJS","ArcElement","Tooltip","Legend","useState","basic","setBasic","product","setProduct","car","setCar","self","setSelf","child","setChild","house","setHouse","education","setEducation","leisure","setLeisure","other","setOther","summaryStat","useSelector","dispatch","useDispatch","useEffect","getTransactionsSummary","map","data","name","total","prev","console","log","SwitchValue","labels","datasets","backgroundColor","borderColor","borderWidth"],"sourceRoot":""}