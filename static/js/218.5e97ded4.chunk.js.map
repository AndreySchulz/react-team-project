{"version":3,"file":"static/js/218.5e97ded4.chunk.js","mappings":"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","sources":["images/transactions/transactionSprite.svg","webpack://react-homework-template/./src/components/Wallet/ModalAddTransaction.module.css?050b","components/Wallet/CustomDatePicker.jsx","components/Wallet/ModalSelect.jsx","components/Wallet/ModalAddTransaction.jsx","webpack://react-homework-template/./src/components/Wallet/Transactions.module.css?ecce","components/Wallet/Transactions.jsx","webpack://react-homework-template/./src/components/Wallet/Balance.module.css?1a7c","components/Wallet/Balance.jsx","webpack://react-homework-template/./src/components/Wallet/Wallet.module.css?3cce","webpack://react-homework-template/./src/components/Wallet/AddTransactionBtn/AddTransactionBtn.module.css?0bcf","components/Wallet/AddTransactionBtn/AddTransactionBtn.jsx","components/Wallet/Wallet.jsx","redux/transactions/transactions-selectors.js"],"sourcesContent":["var _symbol, _symbol2, _symbol3, _symbol4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTransactionSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-calendar\",\n    viewBox: \"0 0 29 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4a56e2\",\n    style: {\n      fill: \"var(--color1, #4a56e2)\"\n    },\n    d: \"M9.6 14.4h-3.2v3.2h3.2v-3.2zM16 14.4h-3.2v3.2h3.2v-3.2zM22.4 14.4h-3.2v3.2h3.2v-3.2zM25.6 3.2h-1.6v-3.2h-3.2v3.2h-12.8v-3.2h-3.2v3.2h-1.6c-1.776 0-3.184 1.44-3.184 3.2l-0.016 22.4c0 1.76 1.424 3.2 3.2 3.2h22.4c1.76 0 3.2-1.44 3.2-3.2v-22.4c0-1.76-1.44-3.2-3.2-3.2zM25.6 28.8h-22.4v-17.6h22.4v17.6z\"\n  })), _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.7778,\n    d: \"M1.778 1.778l28.444 28.444\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.7778,\n    d: \"M1.778 30.222l28.444-28.444\"\n  }))), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-minus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"var(--color2, #fff)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.2,\n    d: \"M0 16h32\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-plus\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"var(--color2, #fff)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.2,\n    d: \"M16 0v32\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#fff\",\n    style: {\n      stroke: \"var(--color2, #fff)\"\n    },\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.2,\n    d: \"M0 16h32\"\n  })), _symbol2 || (_symbol2 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-selectArrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"miter\",\n    strokeLinecap: \"butt\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.6,\n    d: \"M1.6 8.8l14.4 14.4 14.4-14.4\"\n  }))), _symbol3 || (_symbol3 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pencil\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z\"\n  }))), _symbol4 || (_symbol4 = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-bin\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTransactionSprite);\nexport default __webpack_public_path__ + \"static/media/transactionSprite.39e4ce06c63f00d03dae5b603deee49f.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"ModalAddTransaction_backdrop__9YaTy\",\"modal\":\"ModalAddTransaction_modal__Ds58Q\",\"modalForm\":\"ModalAddTransaction_modalForm__+xHlN\",\"closeBtn\":\"ModalAddTransaction_closeBtn__PD4qb\",\"modalTitle\":\"ModalAddTransaction_modalTitle__5uy28\",\"typeWrapper\":\"ModalAddTransaction_typeWrapper__zr9tr\",\"typeCheckbox\":\"ModalAddTransaction_typeCheckbox__5CM5W\",\"customCheckbox\":\"ModalAddTransaction_customCheckbox__Lusq4\",\"inactive\":\"ModalAddTransaction_inactive__XoOqJ\",\"income\":\"ModalAddTransaction_income__9Qunp ModalAddTransaction_inactive__XoOqJ\",\"expense\":\"ModalAddTransaction_expense__FAXIm ModalAddTransaction_inactive__XoOqJ\",\"typeLabel\":\"ModalAddTransaction_typeLabel__xzRI4\",\"amountAndDate\":\"ModalAddTransaction_amountAndDate__k5cLR\",\"amountAndDateInputs\":\"ModalAddTransaction_amountAndDateInputs__8QD0+\",\"amountInput\":\"ModalAddTransaction_amountInput__qwGJd ModalAddTransaction_amountAndDateInputs__8QD0+\",\"customDateInput\":\"ModalAddTransaction_customDateInput__9YfM0 ModalAddTransaction_amountAndDateInputs__8QD0+\",\"calendarIcon\":\"ModalAddTransaction_calendarIcon__L3BwY\",\"commentInput\":\"ModalAddTransaction_commentInput__h66RA\",\"btnWrapper\":\"ModalAddTransaction_btnWrapper__FnKSr\",\"addBtn\":\"ModalAddTransaction_addBtn__73b0r\",\"cancelBtn\":\"ModalAddTransaction_cancelBtn__Cun97 ModalAddTransaction_addBtn__73b0r\",\"chevron\":\"ModalAddTransaction_chevron__rQ39W\",\"chevronTurn\":\"ModalAddTransaction_chevronTurn__B5KZn ModalAddTransaction_chevron__rQ39W\"};","import { forwardRef } from 'react';\nimport s from './ModalAddTransaction.module.css';\nimport sprite from '../../images/transactions/transactionSprite.svg';\n\nexport const CustomDatePicker = forwardRef(({ value, onClick }, ref) => {\n  return (\n    <>\n      <input\n        value={value}\n        className={s.customDateInput}\n        onClick={onClick}\n        onChange={onClick}\n        ref={ref}\n        required\n      />\n      <svg className={s.calendarIcon} width={18} height={20} onClick={onClick}>\n        <use href={sprite + '#icon-calendar'}></use>\n      </svg>\n    </>\n  );\n});\n","import { useSelector } from 'react-redux';\nimport Select from 'react-select';\nimport { selectCategories } from 'redux/transactions/transactions-selectors';\nimport s from './ModalAddTransaction.module.css';\n\nconst SelectArrow = ({ selectProps }) => {\n  return (\n    <div className={selectProps.menuIsOpen ? s.chevronTurn : s.chevron}></div>\n  );\n};\n\nconst selectStyles = {\n  control: () => ({\n    display: 'flex',\n    alignItems: 'center',\n    border: 'none',\n    borderRadius: '0',\n    borderBottom: '1px solid #E0E0E0',\n    padding: '8px',\n    marginBottom: '40px',\n    outline: 'none',\n    fontSize: '18px',\n    lineHeight: '1.5',\n    paddingLeft: '20px',\n\n    ':hover': {\n      backgroundColor: '#ff659614',\n    },\n  }),\n  placeholder: baseStyles => ({\n    ...baseStyles,\n    color: '#BDBDBD',\n  }),\n  option: (baseStyles, { isFocused }) => ({\n    ...baseStyles,\n    backgroundColor: isFocused && '#fff',\n    fontWeight: isFocused && '700',\n    color: isFocused && '#FF6596',\n    padding: '14px 0 17px',\n  }),\n  menu: baseStyles => ({\n    ...baseStyles,\n    fontSize: '18px',\n    width: '100%',\n    lineHeight: 1.5,\n    paddingLeft: '20px',\n    backgroundColor: '#FFFFFFB2',\n    backdropFilter: 'blur(25px)',\n    boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n    borderRadius: '20px',\n  }),\n};\n\nexport function ModalSelect({ setCategoryId }) {\n  const categories = useSelector(selectCategories);\n\n  const selectOptions = categories\n    .filter(category => category.type === 'EXPENSE')\n    .map(({ id, name }) => ({\n      value: id,\n      label: name,\n    }));\n\n  return (\n    <Select\n      options={selectOptions}\n      onChange={a => setCategoryId(a.value)}\n      placeholder=\"Select a category\"\n      styles={selectStyles}\n      unstyled\n      components={{ DropdownIndicator: SelectArrow }}\n      required\n    />\n  );\n}\n","import { useFormik } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/transactions/transactions-slice';\nimport { useCallback, useEffect, useState } from 'react';\nimport * as yup from 'yup';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport s from './ModalAddTransaction.module.css';\nimport {\n  addTransaction,\n  editTransaction,\n  getCategories,\n  getTransactions,\n} from 'redux/transactions/transactions-operations';\nimport { CustomDatePicker } from './CustomDatePicker';\nimport { ModalSelect } from './ModalSelect';\n\nexport function ModalAddTransaction({\n  editModalOpen,\n  setEditModalOpen,\n  transactionID,\n}) {\n  const [startDate, setStartDate] = useState(new Date());\n  const [categoryId, setCategoryId] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCategories());\n  }, [dispatch]);\n\n  const closeModal = useCallback(() => {\n    dispatch(toggleModal());\n    setEditModalOpen(false);\n    dispatch(getTransactions());\n  }, [dispatch, setEditModalOpen]);\n\n  // Close modal on ESC logic:\n\n  useEffect(() => {\n    const closeOnEsc = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    document.addEventListener('keydown', closeOnEsc);\n    return () => document.removeEventListener('keydown', closeOnEsc);\n  }, [dispatch, closeModal]);\n\n  // Close modal on overlay click logic:\n\n  function closeOnOverlay(e) {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  }\n\n  // formik setup:\n\n  const formik = useFormik({\n    initialValues: {\n      type: true,\n      amount: '',\n      comment: '',\n    },\n    validationSchema: yup.object({\n      type: yup.bool(),\n      amount: yup.number().required('Required'),\n      comment: yup.string().max(40, '40 characters max'),\n    }),\n\n    onSubmit: ({ type, amount, comment }) => {\n      const newTransaction = {\n        transactionDate: startDate,\n        comment,\n        categoryId: type ? categoryId : '063f1132-ba5d-42b4-951d-44011ca46262',\n        amount: type ? Number(amount) * -1 : Number(amount),\n\n        type: type ? 'EXPENSE' : 'INCOME',\n      };\n      editModalOpen\n        ? dispatch(editTransaction({ transactionID, newTransaction }))\n        : dispatch(addTransaction(newTransaction));\n      closeModal();\n    },\n  });\n\n  const { handleChange, handleSubmit, values, errors, touched } = formik;\n\n  return (\n    <div className={s.backdrop} onClick={closeOnOverlay}>\n      <div className={s.modal}>\n        <button\n          className={s.closeBtn}\n          onClick={closeModal}\n          type=\"button\"\n          aria-label=\"close button\"\n        ></button>\n\n        <form className={s.modalForm} onSubmit={handleSubmit}>\n          <h2 className={s.modalTitle}>\n            {editModalOpen ? 'Edit Transaction' : 'Add transaction'}\n          </h2>\n\n          <div className={s.typeWrapper}>\n            <div className={values.type ? s.inactive : s.income}>Income</div>\n            <label className={s.typeLabel}>\n              <input\n                className={s.typeCheckbox}\n                name=\"type\"\n                type=\"checkbox\"\n                checked={values.type}\n                onChange={handleChange}\n              />\n              <div className={s.customCheckbox}></div>\n            </label>\n            <div className={values.type ? s.expense : s.inactive}>Expense</div>\n          </div>\n\n          {values.type && <ModalSelect setCategoryId={setCategoryId} />}\n          {touched.categoryId && errors.categoryId ? (\n            <div>{errors.categoryId}</div>\n          ) : null}\n\n          <div className={s.amountAndDate}>\n            <input\n              className={s.amountInput}\n              name=\"amount\"\n              type=\"text\"\n              placeholder=\"0.00\"\n              value={values.amount}\n              onChange={handleChange}\n              required\n            />\n            {touched.amount && errors.amount ? (\n              <div>{errors.amount}</div>\n            ) : null}\n\n            <DatePicker\n              selected={startDate}\n              dateFormat=\"dd.MM.yyyy\"\n              calendarStartDay={1}\n              onChange={setStartDate}\n              customInput={<CustomDatePicker />}\n            />\n          </div>\n\n          <textarea\n            className={s.commentInput}\n            name=\"comment\"\n            type=\"text\"\n            placeholder=\"Comment\"\n            value={values.comment}\n            onChange={handleChange}\n          />\n          {touched.comment && errors.comment ? (\n            <div>{errors.comment}</div>\n          ) : null}\n\n          <div className={s.btnWrapper}>\n            <button className={s.addBtn} type=\"submit\">\n              {editModalOpen ? 'Edit' : 'Add'}\n            </button>\n            <button className={s.cancelBtn} type=\"button\" onClick={closeModal}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"transactions\":\"Transactions_transactions__71ga-\",\"transactionsTable\":\"Transactions_transactionsTable__dtPaD\",\"tableHeaderData\":\"Transactions_tableHeaderData__mZexS\",\"tableHeaderDataRight\":\"Transactions_tableHeaderDataRight__gujHp Transactions_tableHeaderData__mZexS\",\"tableBody\":\"Transactions_tableBody__mnCJO\",\"tableData\":\"Transactions_tableData__i3g3I\",\"firstTableData\":\"Transactions_firstTableData__hSLhT\",\"lastTableData\":\"Transactions_lastTableData__YuN01\",\"tableDataRight\":\"Transactions_tableDataRight__k5pQt Transactions_tableData__i3g3I\",\"tableDataIncome\":\"Transactions_tableDataIncome__YKGXQ Transactions_tableDataRight__k5pQt Transactions_tableData__i3g3I\",\"tableDataExpense\":\"Transactions_tableDataExpense__X6kvt Transactions_tableDataRight__k5pQt Transactions_tableData__i3g3I\",\"editBtn\":\"Transactions_editBtn__Cgz7S\",\"editBtnIcon\":\"Transactions_editBtnIcon__i3WDp\",\"mobTransaction\":\"Transactions_mobTransaction__yseD9\",\"transactionRowIncome\":\"Transactions_transactionRowIncome__byqUX\",\"transactionRowExpense\":\"Transactions_transactionRowExpense__Zo5ej Transactions_transactionRowIncome__byqUX\",\"transactionHeader\":\"Transactions_transactionHeader__VeVKT\",\"transactionData\":\"Transactions_transactionData__E0V3h\",\"transactionDataIncome\":\"Transactions_transactionDataIncome__Ngq-x Transactions_transactionData__E0V3h\",\"transactionDataExpense\":\"Transactions_transactionDataExpense__UjAqw Transactions_transactionData__E0V3h\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { compareDesc, format, parseISO } from 'date-fns';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Media from 'react-media';\nimport {\n  deleteTransaction,\n  getCategories,\n  getTransactions,\n} from 'redux/transactions/transactions-operations';\nimport {\n  selectCategories,\n  selectTransactions,\n  selectModalStatus,\n  selectError,\n} from 'redux/transactions/transactions-selectors';\nimport { ModalAddTransaction } from './ModalAddTransaction';\nimport s from './Transactions.module.css';\nimport { mediaQueries } from './Wallet';\nimport sprite from '../../images/transactions/transactionSprite.svg';\nimport { toggleModal } from 'redux/transactions/transactions-slice';\n\n//// Media query using js:\n\n// function AlterTable() {\n//   const [isMobile, setIsMobile] = useState(false);\n//   window.matchMedia('(max-width: 767px)').addEventListener('change', e => {\n//     e.matches ? setIsMobile(true) : setIsMobile(false);\n//   });\n\n//   return isMobile && <h1>BAALKSJFLA</h1>;\n// }\n\nlet transactionID = '';\n\n//// Toggle body scroll lock:\n\nfunction bodyScrollLock(isOpen) {\n  if (isOpen) {\n    document.body.style.overflow = 'hidden';\n    document.body.style.position = 'fixed';\n  } else {\n    document.body.style.overflow = 'visible';\n    document.body.style.position = 'static';\n  }\n}\n\nconst Transactions = () => {\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [transactionsData, setTransactionsData] = useState([]);\n  const isModalOpen = useSelector(selectModalStatus);\n  const categories = useSelector(selectCategories);\n  const fetchtransactionsData = useSelector(selectTransactions);\n  const isError = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  // ckecking user's device:\n  const [isMobile, setIsMobile] = useState(false);\n  window.matchMedia('(max-width: 767px)').addEventListener('change', e => {\n    e.matches ? setIsMobile(true) : setIsMobile(false);\n  });\n\n  useEffect(() => {\n    dispatch(getCategories());\n    setTransactionsData(\n      // [...fetchtransactionsData].sort((a, b) =>\n      //   compareDesc(parseISO(a.transactionDate), parseISO(b.transactionDate))\n      // )\n      [...fetchtransactionsData]\n        .reverse()\n        .sort((a, b) =>\n          compareDesc(parseISO(a.transactionDate), parseISO(b.transactionDate))\n        )\n    );\n  }, [dispatch, fetchtransactionsData]);\n\n  function transactionsSorter(e) {\n    const needToDecrement = e.currentTarget.dataset.flag === 'incr';\n\n    if (e?.target.textContent === 'Sum') {\n      if (needToDecrement) {\n        setTransactionsData(state =>\n          [...state].sort((a, b) => Math.abs(b.amount) - Math.abs(a.amount))\n        );\n        e.currentTarget.dataset.flag = 'decr';\n        return;\n      }\n\n      setTransactionsData(state =>\n        [...state].sort((a, b) => Math.abs(a.amount) - Math.abs(b.amount))\n      );\n      e.currentTarget.dataset.flag = 'incr';\n    }\n\n    if (e?.target.textContent === 'Date') {\n      if (needToDecrement) {\n        setTransactionsData(state =>\n          [...state].sort((a, b) =>\n            compareDesc(\n              parseISO(b.transactionDate),\n              parseISO(a.transactionDate)\n            )\n          )\n        );\n        e.currentTarget.dataset.flag = 'decr';\n        return;\n      }\n\n      setTransactionsData(state =>\n        [...state].sort((a, b) =>\n          compareDesc(parseISO(a.transactionDate), parseISO(b.transactionDate))\n        )\n      );\n      e.currentTarget.dataset.flag = 'incr';\n    }\n\n    if (e?.target.textContent === 'Type') {\n      if (needToDecrement) {\n        setTransactionsData(state =>\n          [...state].sort((a, b) => b.type.localeCompare(a.type))\n        );\n        e.currentTarget.dataset.flag = 'decr';\n        return;\n      }\n\n      setTransactionsData(state =>\n        [...state].sort((a, b) => a.type.localeCompare(b.type))\n      );\n      e.currentTarget.dataset.flag = 'incr';\n    }\n\n    if (e?.target.textContent === 'Category') {\n      if (needToDecrement) {\n        setTransactionsData(state =>\n          [...state].sort((a, b) =>\n            categories\n              .find(category => category.id === b.categoryId)\n              ?.name.localeCompare(\n                categories.find(category => category.id === a.categoryId)?.name\n              )\n          )\n        );\n        e.currentTarget.dataset.flag = 'decr';\n        return;\n      }\n\n      setTransactionsData(state =>\n        [...state].sort((a, b) =>\n          categories\n            .find(category => category.id === a.categoryId)\n            ?.name.localeCompare(\n              categories.find(category => category.id === b.categoryId)?.name\n            )\n        )\n      );\n      e.currentTarget.dataset.flag = 'incr';\n    }\n\n    if (e?.target.textContent === 'Balance') {\n      if (needToDecrement) {\n        setTransactionsData(state =>\n          [...state].sort((a, b) => b.balanceAfter - a.balanceAfter)\n        );\n        e.currentTarget.dataset.flag = 'decr';\n        return;\n      }\n\n      setTransactionsData(state =>\n        [...state].sort((a, b) => a.balanceAfter - b.balanceAfter)\n      );\n      e.currentTarget.dataset.flag = 'incr';\n    }\n  }\n\n  function onDeleteTransaction(id) {\n    dispatch(deleteTransaction(id));\n    dispatch(getTransactions());\n  }\n\n  !!isError && toast.error(isError);\n\n  isMobile && bodyScrollLock(isModalOpen);\n\n  return (\n    <section className={s.transactions}>\n      <Media queries={mediaQueries}>\n        {matches =>\n          matches.mobile || matches.response ? (\n            <div>\n              {transactionsData.map(\n                ({\n                  id,\n                  transactionDate,\n                  type,\n                  categoryId,\n                  comment,\n                  amount,\n                  balanceAfter,\n                }) => (\n                  <div className={s.mobTransaction} key={id}>\n                    <div\n                      className={\n                        type === 'INCOME'\n                          ? s.transactionRowIncome\n                          : s.transactionRowExpense\n                      }\n                    >\n                      <p className={s.transactionHeader}>Date</p>\n                      <p className={s.transactionData}>\n                        {format(parseISO(transactionDate), 'dd.MM.yyyy')}\n                      </p>\n                    </div>\n                    <div\n                      className={\n                        type === 'INCOME'\n                          ? s.transactionRowIncome\n                          : s.transactionRowExpense\n                      }\n                    >\n                      <p className={s.transactionHeader}>Type</p>\n                      <p className={s.transactionData}>\n                        {type === 'INCOME' ? '+' : '-'}\n                      </p>\n                    </div>\n                    <div\n                      className={\n                        type === 'INCOME'\n                          ? s.transactionRowIncome\n                          : s.transactionRowExpense\n                      }\n                    >\n                      <p className={s.transactionHeader}>Category</p>\n                      <p className={s.transactionData}>\n                        {\n                          categories.find(\n                            category => category.id === categoryId\n                          )?.name\n                        }\n                      </p>\n                    </div>\n                    <div\n                      className={\n                        type === 'INCOME'\n                          ? s.transactionRowIncome\n                          : s.transactionRowExpense\n                      }\n                    >\n                      <p className={s.transactionHeader}>Comment</p>\n                      <p className={s.transactionData}>{comment}</p>\n                    </div>\n                    <div\n                      className={\n                        type === 'INCOME'\n                          ? s.transactionRowIncome\n                          : s.transactionRowExpense\n                      }\n                    >\n                      <p className={s.transactionHeader}>Sum</p>\n                      <p\n                        className={\n                          type === 'INCOME'\n                            ? s.transactionDataIncome\n                            : s.transactionDataExpense\n                        }\n                      >\n                        {Math.abs(amount)}\n                      </p>\n                    </div>\n                    <div\n                      className={\n                        type === 'INCOME'\n                          ? s.transactionRowIncome\n                          : s.transactionRowExpense\n                      }\n                    >\n                      <p className={s.transactionHeader}>Balance</p>\n                      <p className={s.transactionData}>{balanceAfter}</p>\n                    </div>\n                  </div>\n                )\n              )}\n            </div>\n          ) : (\n            <table className={s.transactionsTable}>\n              <thead>\n                <tr className={s.tableHeaderRow}>\n                  <th\n                    className={s.tableHeaderData}\n                    onClick={transactionsSorter}\n                    data-flag=\"incr\"\n                  >\n                    Date\n                  </th>\n                  <th\n                    className={s.tableHeaderData}\n                    onClick={transactionsSorter}\n                    data-flag=\"incr\"\n                  >\n                    Type\n                  </th>\n                  <th\n                    className={s.tableHeaderData}\n                    onClick={e => transactionsSorter(e)}\n                    data-flag=\"incr\"\n                  >\n                    Category\n                  </th>\n                  <th className={s.tableHeaderData}>Comment</th>\n                  <th\n                    className={s.tableHeaderDataRight}\n                    data-flag=\"incr\"\n                    onClick={transactionsSorter}\n                  >\n                    Sum\n                  </th>\n                  <th\n                    className={s.tableHeaderDataRight}\n                    data-flag=\"incr\"\n                    onClick={transactionsSorter}\n                  >\n                    Balance\n                  </th>\n\n                  <th className={s.tableHeaderDataRight}>Edit</th>\n                </tr>\n              </thead>\n              <tbody className={s.tableBody}>\n                {transactionsData.map(\n                  (\n                    {\n                      id,\n                      transactionDate,\n                      type,\n                      categoryId,\n                      comment,\n                      amount,\n                      balanceAfter,\n                    },\n                    idx,\n                    arr\n                  ) => (\n                    <tr key={id}>\n                      <td\n                        className={`${s.tableData} ${\n                          idx === 0 ? s.firstTableData : ''\n                        } ${idx === arr.length - 1 ? s.lastTableData : ''}`}\n                      >\n                        {format(parseISO(transactionDate), 'dd.MM.yyyy')}\n                      </td>\n                      <td\n                        className={`${s.tableData} ${\n                          idx === 0 ? s.firstTableData : ''\n                        } ${idx === arr.length - 1 ? s.lastTableData : ''}`}\n                      >\n                        {type === 'INCOME' ? '+' : '-'}\n                      </td>\n                      <td\n                        className={`${s.tableData} ${\n                          idx === 0 ? s.firstTableData : ''\n                        } ${idx === arr.length - 1 ? s.lastTableData : ''}`}\n                      >\n                        {\n                          categories.find(\n                            category => category.id === categoryId\n                          )?.name\n                        }\n                      </td>\n                      <td\n                        className={`${s.tableData} ${\n                          idx === 0 ? s.firstTableData : ''\n                        } ${idx === arr.length - 1 ? s.lastTableData : ''}`}\n                      >\n                        {comment}\n                      </td>\n                      <td\n                        className={`${\n                          type === 'INCOME'\n                            ? s.tableDataIncome\n                            : s.tableDataExpense\n                        } ${idx === 0 ? s.firstTableData : ''} ${\n                          idx === arr.length - 1 ? s.lastTableData : ''\n                        }`}\n                      >\n                        {Math.abs(amount)}\n                      </td>\n                      <td\n                        className={`${s.tableDataRight} ${\n                          idx === 0 ? s.firstTableData : ''\n                        } ${idx === arr.length - 1 ? s.lastTableData : ''}`}\n                      >\n                        {balanceAfter}\n                      </td>\n                      <td\n                        className={`${s.tableDataRight} ${\n                          idx === 0 ? s.firstTableData : ''\n                        } ${idx === arr.length - 1 ? s.lastTableData : ''}`}\n                      >\n                        <button\n                          className={s.editBtn}\n                          onClick={() => {\n                            transactionID = id;\n                            dispatch(toggleModal());\n                            setEditModalOpen(true);\n                          }}\n                          type=\"button\"\n                        >\n                          <svg className={s.editBtnIcon} width={15} height={15}>\n                            <use href={`${sprite}#icon-pencil`}></use>\n                          </svg>\n                        </button>\n                        <button\n                          className={s.editBtn}\n                          onClick={() => onDeleteTransaction(id)}\n                          type=\"button\"\n                        >\n                          <svg className={s.editBtnIcon} width={15} height={15}>\n                            <use href={`${sprite}#icon-bin`}></use>\n                          </svg>\n                        </button>\n                      </td>\n                    </tr>\n                  )\n                )}\n              </tbody>\n            </table>\n          )\n        }\n      </Media>\n\n      {isModalOpen && (\n        <ModalAddTransaction\n          editModalOpen={editModalOpen}\n          setEditModalOpen={setEditModalOpen}\n          transactionID={transactionID}\n        />\n      )}\n\n      <ToastContainer />\n    </section>\n  );\n};\n\nexport default Transactions;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Balance_card__N1Gq1\",\"title\":\"Balance_title__Xono1\",\"result\":\"Balance_result__0KQXr\"};","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectTransactions } from 'redux/transactions/transactions-selectors';\nimport { getAuthBalance } from '../../redux/AuthRedux/selectors';\nimport s from './Balance.module.css';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { refreshBalance } from 'redux/AuthRedux/operations';\n\nconst Balance = () => {\n  const apiBalance = useSelector(getAuthBalance);\n  const transactions = useSelector(selectTransactions);\n  const [balance, setBalance] = useState(apiBalance);\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n  dispatch(refreshBalance());\n// eslint-disable-next-line\n  }, [transactions]);\n\n  useEffect(() => {\n  setBalance(apiBalance);\n  }, [apiBalance]);\n\n  return (\n    <div className={s.card}>\n      <p className={s.title}>Your balance</p>\n      <p className={s.result}>&#8372; {balance}</p>\n    </div>\n  );\n};\n\nexport default Balance;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Wallet_container__dUf7n\",\"balance\":\"Wallet_balance__IfjY6\",\"navigation\":\"Wallet_navigation__bohIM\",\"content\":\"Wallet_content__r+Au2\",\"bar\":\"Wallet_bar__OhCIc\"};","// extracted by mini-css-extract-plugin\nexport default {\"addButton\":\"AddTransactionBtn_addButton__8-dbh\"};","import { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/transactions/transactions-slice';\nimport s from './AddTransactionBtn.module.css';\nimport sprite from '../../../images/transactions/transactionSprite.svg';\n\nexport function AddTransactionBtn() {\n  const dispatch = useDispatch();\n\n  return (\n    <button\n      type=\"button\"\n      className={s.addButton}\n      aria-label=\"add transaction button\"\n      onClick={() => dispatch(toggleModal())}\n    >\n      <svg width={20} height={20}>\n        <use href={sprite + '#icon-plus'}></use>\n      </svg>\n    </button>\n  );\n}\n","import { Suspense, useEffect } from 'react';\nimport { Navigate, NavLink } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { Currency } from './Currency';\nimport Balance from './Balance';\nimport Media from 'react-media';\nimport s from '../Navigation/Navigation.module.css';\nimport css from '../Wallet/Wallet.module.css';\nimport sprite from '../Navigation/sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { getTransactions } from 'redux/transactions/transactions-operations';\nimport { AddTransactionBtn } from './AddTransactionBtn/AddTransactionBtn';\nimport { selectModalStatus } from 'redux/transactions/transactions-selectors';\n\nexport const mediaQueries = {\n  response: '(max-width: 479px)',\n  mobile: '(min-width: 480px) and (max-width: 767px)',\n  tablet: '(min-width: 768px) and (max-width: 1279px)',\n  desktop: '(min-width: 1280px)',\n};\n\nconst Wallet = () => {\n  const isTransactionModalOpen = useSelector(selectModalStatus);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTransactions());\n  }, [dispatch]);\n  const { pathname } = useLocation();\n  console.log(pathname);\n\n  return (\n    <>\n      <section className={css.container}>\n        <div className={css.bar}>\n          <div className={css.navigation}>\n          <ul className={s.nav}>\n            <li className={s.navItem}>\n              <NavLink\n                to=\"home\"\n                className={s.navLink}\n                activeclassname={s.navLinkActive}\n              >\n                <div className={s.iconWrapper}>\n                  <svg className={s.svg}>\n                    <use href={`${sprite}#icon-home`}></use>\n                  </svg>\n                </div>\n                <span className={s.navText}>Home</span>\n              </NavLink>\n            </li>\n            <li className={s.navItem}>\n              <NavLink\n                to=\"diagram\"\n                className={s.navLink}\n                activeclassname={s.navLinkActive}\n              >\n                <div className={s.iconWrapper}>\n                  <svg className={s.svg}>\n                    <use href={`${sprite}#icon-statistic`}></use>\n                  </svg>\n                </div>\n                <span className={s.navText}>Statistics</span>\n              </NavLink>\n            </li>\n            <Media queries={mediaQueries}>\n              {matches =>\n                (matches.mobile || matches.response) && (\n                  <li className={s.navItem}>\n                    <NavLink\n                      to=\"currency\"\n                      className={s.navLink}\n                      activeclassname={s.navLinkActive}\n                    >\n                      <div className={s.iconWrapper}>\n                        <svg className={s.svg}>\n                          <use href={`${sprite}#icon-currency`}></use>\n                        </svg>\n                      </div>\n                    </NavLink>\n                  </li>\n                )\n              }\n            </Media>\n          </ul>\n          \n          <div className={css.balance}>\n            {pathname !== '/wallet/currency' && <Balance />}\n          </div>\n          </div>\n          <div className={css.currency}>\n            <Media queries={mediaQueries}>\n              {matches => (matches.tablet || matches.desktop) && <Currency />}\n            </Media>\n            <Media queries={mediaQueries}>\n              {matches =>\n                (matches.tablet || matches.desktop) &&\n                pathname === '/wallet/currency' && (\n                  <Navigate to=\"/wallet/home\" />\n                )\n              }\n            </Media>\n          </div>\n        </div>\n        <div className={css.content}>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </div>\n      </section>\n      <Media queries={mediaQueries}>\n        {matches =>\n          (matches.tablet || matches.desktop) && <AddTransactionBtn />\n        }\n      </Media>\n      <Media queries={mediaQueries}>\n        {matches =>\n          (matches.mobile || matches.response) &&\n          !isTransactionModalOpen && <AddTransactionBtn />\n        }\n      </Media>\n    </>\n  );\n};\n\nexport default Wallet;\n","export const selectTransactions = state => state.transactions.transactions;\nexport const selectCategories = state => state.transactions.categories;\nexport const selectError = state => state.transactions.error;\nexport const selectModalStatus = state =>\n  state.transactions.isTransactionModalOpen;\n"],"names":["CustomDatePicker","forwardRef","ref","value","onClick","className","s","onChange","required","width","height","href","sprite","SelectArrow","selectProps","menuIsOpen","selectStyles","control","display","alignItems","border","borderRadius","borderBottom","padding","marginBottom","outline","fontSize","lineHeight","paddingLeft","backgroundColor","placeholder","baseStyles","color","option","isFocused","fontWeight","menu","backdropFilter","boxShadow","ModalSelect","setCategoryId","selectOptions","useSelector","selectCategories","filter","category","type","map","id","label","name","options","a","styles","unstyled","components","DropdownIndicator","ModalAddTransaction","editModalOpen","setEditModalOpen","transactionID","useState","Date","startDate","setStartDate","categoryId","dispatch","useDispatch","useEffect","getCategories","closeModal","useCallback","toggleModal","getTransactions","closeOnEsc","e","code","document","addEventListener","removeEventListener","formik","useFormik","initialValues","amount","comment","validationSchema","yup","max","onSubmit","newTransaction","transactionDate","Number","editTransaction","addTransaction","handleChange","handleSubmit","values","errors","touched","target","currentTarget","checked","selected","dateFormat","calendarStartDay","customInput","transactionsData","setTransactionsData","isModalOpen","selectModalStatus","categories","fetchtransactionsData","selectTransactions","isError","selectError","isMobile","setIsMobile","transactionsSorter","needToDecrement","dataset","flag","textContent","state","sort","b","Math","abs","compareDesc","parseISO","localeCompare","find","balanceAfter","window","matchMedia","matches","reverse","toast","body","style","overflow","position","queries","mediaQueries","mobile","response","format","idx","arr","length","deleteTransaction","onDeleteTransaction","apiBalance","getAuthBalance","transactions","balance","setBalance","refreshBalance","AddTransactionBtn","tablet","desktop","isTransactionModalOpen","pathname","useLocation","console","log","css","to","activeclassname","Currency","Suspense","error"],"sourceRoot":""}